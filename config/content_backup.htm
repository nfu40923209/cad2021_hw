<h1>About</h1>
<p>本學期的電腦輔助設計實習, 要求每一位學員根據本 HW template 的格式建立個人的作業倉儲與網頁.</p>
<hr/>
<p>40923209</p>
<p>網站倉儲: <a href="https://github.com/nfu40923209/cad2021_hw">https://github.com/nfu40923209/cad2021_hw</a></p>
<p>網站連結: <a href="https://nfu40923209.github.io/cad2021_hw/content/index.html">https://nfu40923209.github.io/cad2021_hw/content/index.html</a></p>
<p>其他與作者或作業相關資料說明或介紹</p>
<h1>Task</h1>
<h2>hwpages</h2>
<p>我的作法是利用同學提供的 github account 一個一個查詢，然後複製網址到作業網站工作區貼上同學的網站連結，沒提供 github account 的同學以學號代替。</p>
<p>cad2021 2b</p>
<p>cad2b w2  github網站連結<br/>40723126 <a href="https://40723126.github.io/cad2021_hw/content/index.html">40723126</a><br/>40723135 <a href="https://40723135.github.io/cad2021_hw/content/index.html">40723135</a><br/>40723217 <a href="https://40723217.github.io/cad2021_hw/content/index.html">40723217</a><br/>40732331 <a href="https://s40732331.github.io/cad2021_hw/content/index.html">s40732331</a><br/>40823114 <a href="https://40823114.github.io/cad2021_hw/content/index.html">40823114</a><br/>40823115 <a href="https://40823115.github.io/cad2021_hw/content/index.html">40823115</a><br/>40823117 <a href="https://pyc40823117.github.io/cad2021_hw/content/index.html">pyc40823117</a><br/>40823119 <a href="https://40823119.github.io/cad2021_hw/content/index.html">40823119</a><br/>40823122 <a href="https://40823122.github.io/cad2021_hw/content/index.html">40823122</a><br/>40823127 <a href="https://40823127.github.io/cad2021_hw/content/index.html">40823127</a><br/>40823146 <a href="https://40823146.github.io/cad2021_hw/content/index.html">40823146</a><br/>40823148 <a href="https://40823148.github.io/cad2021_hw/content/index.html">40823148</a><br/>40823215 <a href="https://40823215.github.io/cad2021_hw/content/index.html">40823215</a><br/>40871106 <a href="https://40871106.github.io/cad2021_hw/content/index.html">40871106</a><br/>40923201 <a href="https://40923201.github.io/cad2021_hw/content/index.html">40923201</a><br/>40923203 <a href="https://youshin40923203.github.io/cad2021_hw/content/index.html">youshin40923203</a><br/>40923204 <a href="https://40923204.github.io/cad2021_hw/content/index.html">40923204</a><br/>40923205 <a href="https://40923205.github.io/cad2021_hw/content/index.html">40923205</a><br/>40923206 <a href="https://40923206-1.github.io/cad2021_hw/content/index.html">40923206-1</a><br/>40923207 <a href="https://40923207.github.io/cad2021_hw/content/index.html">40923207</a><br/>40923208 <a href="https://nfu40923208.github.io/cad2021_hw/content/index.html">nfu40923208</a><br/>40923209 <a href="https://nfu40923209.github.io/cad2021_hw/content/index.html">nfu40923209</a><br/>40923210 <a href="https://40923210.github.io/cad2021_hw/content/index.html">40923210</a><br/>40923211 <a href="https://a40923211.github.io/cad2021_hw/content/index.html">a40923211</a><br/>40923212 <a href="https://40923212.github.io/cad2021_hw/content/index.html">40923212</a><br/>40923213 <a href="https://40923213.github.io/cad2021_hw/content/index.html">40923213</a><br/>40923214 <a href="https://40923214.github.io/cad2021_hw/content/index.html">40923214</a><br/>40923216 <a href="https://40923216.github.io/cad2021_hw/content/index.html">40923216</a><br/>40923217 <a href="https://40923217.github.io/cad2021_hw/content/index.html">40923217</a><br/>40923218 <a href="https://40923218.github.io/cad2021_hw/content/index.html">40923218</a><br/>40923219 <a href="https://nfu40923219.github.io/cad2021_hw/content/index.html">nfu40923219</a><br/>40923220 <a href="https://40923220.github.io/cad2021_hw/content/index.html">40923220</a><br/>40923221 <a href="https://40923221.github.io/cad2021_hw/content/index.html">40923221</a><br/>40923223 <a href="https://40923223.github.io/cad2021_hw/content/index.html">40923223</a><br/>40923224 <a href="https://s40923224.github.io/cad2021_hw/content/index.html">s40923224</a><br/>40923225 <a href="https://40923225.github.io/cad2021_hw/content/index.html">40923225</a><br/>40923226 <a href="https://40923226.github.io/cad2021_hw/content/index.html">40923226</a><br/>40923227 <a href="https://40923227.github.io/cad2021_hw/content/index.html">40923227</a><br/>40923228 <a href="https://40923228.github.io/cad2021_hw/content/index.html">40923228</a><br/>40923229 <a href="https://40923229.github.io/cad2021_hw/content/index.html">40923229</a><br/>40923230 <a href="https://40923230.github.io/cad2021_hw/content/index.html">40923230</a><br/>40923231 <a href="https://40923231.github.io/cad2021_hw/content/index.html">40923231</a><br/>40923232 <a href="https://40923232.github.io/cad2021_hw/content/index.html">40923232</a><br/>40923233 <a href="https://40923233.github.io/cad2021_hw/content/index.html">40923233</a><br/>40923234 <a href="https://40923234.github.io/cad2021_hw/content/index.html">40923234</a><br/>40923235 <a href="https://40923235.github.io/cad2021_hw/content/index.html">40923235</a><br/>40923236 <a href="https://40923236.github.io/cad2021_hw/content/index.html">40923236</a><br/>40923237 <a href="https://40923237.github.io/cad2021_hw/content/index.html">40923237</a><br/>40923238 <a href="https://40923238.github.io/cad2021_hw/content/index.html">40923238</a><br/>40923239 <a href="https://40923239.github.io/cad2021_hw/content/index.html">40923239</a><br/>40923240 <a href="https://40923240.github.io/cad2021_hw/content/index.html">40923240</a><br/>40923241 <a href="https://40923241.github.io/cad2021_hw/content/index.html">40923241</a><br/>40923242 <a href="https://40923242.github.io/cad2021_hw/content/index.html">40923242</a><br/>40923243 <a href="https://40923243.github.io/cad2021_hw/content/index.html">40923243</a><br/>40923244 <a href="https://40923244.github.io/cad2021_hw/content/index.html">40923244</a><br/>40923245 <a href="https://40923245-1.github.io/cad2021_hw/content/index.html">40923245-1</a><br/>40923246 <a href="https://40923246.github.io/cad2021_hw/content/index.html">40923246</a><br/>40923247 <a href="https://40923247.github.io/cad2021_hw/content/index.html">40923247</a><br/>40923248 <a href="https://40923248.github.io/cad2021_hw/content/index.html">40923248</a><br/>40923249 <a href="https://40923249-1.github.io/cad2021_hw/content/index.html">40923249-1</a><br/>40923250 <a href="https://40923250.github.io/cad2021_hw/content/index.html">40923250</a><br/>40923251 <a href="https://40923251.github.io/cad2021_hw/content/index.html">40923251</a><br/>40923252 <a href="https://40923252.github.io/cad2021_hw/content/index.html">40923252</a><br/>40923253 <a href="https://40923253.github.io/cad2021_hw/content/index.html">40923253</a><br/>40971220 <a href="https://40971220.github.io/cad2021_hw/content/index.html">40971220</a><br/>40971227 <a href="https://40971227.github.io/cad2021_hw/content/index.html">40971227</a></p>
<p>cad2b w5  github倉儲連結<br/>40723126 <a href="https://github.com/40723126/cad2021_hw">40723126</a><br/>40723135 <a href="https://github.com/40723135/cad2021_hw">40723135</a><br/>40723217 <a href="https://github.com/40723217/cad2021_hw">40723217</a><br/>40732331 <a href="https://github.com/40732331/cad2021_hw">40732331</a><br/>40823114 <a href="https://github.com/40823114/cad2021_hw">40823114</a><br/>40823115 <a href="https://github.com/40823115/cad2021_hw">40823115</a><br/>40823117 <a href="https://github.com/pyc40823117/cad2021_hw">pyc40823117</a><br/>40823119 <a href="https://github.com/40823119/cad2021_hw">40823119</a><br/>40823122 <a href="https://github.com/40823122/cad2021_hw">40823122</a><br/>40823127 <a href="https://github.com/40823127/cad2021_hw">40823127</a><br/>40823146 <a href="https://github.com/40823146/cad2021_hw">40823146</a><br/>40823148 <a href="https://github.com/40823148/cad2021_hw">40823148</a><br/>40823215 <a href="https://github.com/40823215/cad2021_hw">40823215</a><br/>40871106 <a href="https://github.com/40871106/cad2021_hw">40871106</a><br/>40923201 <a href="https://github.com/40923201/cad2021_hw">40923201</a><br/>40923203 <a href="https://github.com/youshin40923203/cad2021_hw">youshin40923203</a><br/>40923204 <a href="https://github.com/40923204/cad2021_hw">40923204</a><br/>40923205 <a href="https://github.com/40923205/cad2021_hw">40923205</a><br/>40923206 <a href="https://github.com/40923206-1/cad2021_hw">40923206-1</a><br/>40923207 <a href="https://github.com/40923207/cad2021_hw">40923207</a><br/>40923208 <a href="https://github.com/nfu40923208/cad2021_hw">nfu40923208</a><br/>40923209 <a href="https://github.com/nfu40923209/cad2021_hw">nfu40923209</a><br/>40923210 <a href="https://github.com/40923210/cad2021_hw">40923210</a><br/>40923211 <a href="https://github.com/a40923211/cad2021_hw">a40923211</a><br/>40923212 <a href="https://github.com/40923212/cad2021_hw">40923212</a><br/>40923213 <a href="https://github.com/40923213/cad2021_hw">40923213</a><br/>40923214 <a href="https://github.com/40923214/cad2021_hw">40923214</a><br/>40923216 <a href="https://github.com/40923216/cad2021_hw">40923216</a><br/>40923217 <a href="https://github.com/40923217/cad2021_hw">40923217</a><br/>40923218 <a href="https://github.com/40923218/cad2021_hw">40923218</a><br/>40923219 <a href="https://github.com/nfu40923219/cad2021_hw">nfu40923219</a><br/>40923220 <a href="https://github.com/40923220/cad2021_hw">40923220</a><br/>40923221 <a href="https://github.com/40923221/cad2021_hw">40923221</a><br/>40923223 <a href="https://github.com/40923223/cad2021_hw">40923223</a><br/>40923224 <a href="https://github.com/s40923224/cad2021_hw">s40923224</a><br/>40923225 <a href="https://github.com/40923225/cad2021_hw">40923225</a><br/>40923226 <a href="https://github.com/40923226/cad2021_hw">40923226</a><br/>40923227 <a href="https://github.com/40923227/cad2021_hw">40923227</a><br/>40923228 <a href="https://github.com/40923228/cad2021_hw">40923228</a><br/>40923229 <a href="https://github.com/40923229/cad2021_hw">40923229</a><br/>40923230 <a href="https://github.com/40923230/cad2021_hw">40923230</a><br/>40923231 <a href="https://github.com/40923231/cad2021_hw">40923231</a><br/>40923232 <a href="https://github.com/40923232/cad2021_hw">40923232</a><br/>40923233 <a href="https://github.com/40923233/cad2021_hw">40923233</a><br/>40923234 <a href="https://github.com/40923234/cad2021_hw">40923234</a><br/>40923235 <a href="https://github.com/40923235/cad2021_hw">40923235</a><br/>40923236 <a href="https://github.com/40923236/cad2021_hw">40923236</a><br/>40923237 <a href="https://github.com/40923237/cad2021_hw">40923237</a><br/>40923238 <a href="https://github.com/40923238/cad2021_hw">40923238</a><br/>40923239 <a href="https://github.com/40923239/cad2021_hw">40923239</a><br/>40923240 <a href="https://github.com/40923240/cad2021_hw">40923240</a><br/>40923241 <a href="https://github.com/40923241/cad2021_hw">40923241</a><br/>40923242 <a href="https://github.com/409232042/cad2021_hw">40923242</a><br/>40923243 <a href="https://github.com/40923243/cad2021_hw">40923243</a><br/>40923244 <a href="https://github.com/40923244/cad2021_hw">40923244</a><br/>40923245 <a href="https://github.com/40923245-1/cad2021_hw">40923245-1</a><br/>40923246 <a href="https://github.com/40923246/cad2021_hw">40923246</a><br/>40923247 <a href="https://github.com/40923247/cad2021_hw">40923247</a><br/>40923248 <a href="https://github.com/40923248/cad2021_hw">40923248</a><br/>40923249 <a href="https://github.com/40923249-1/cad2021_hw">40923249-1</a><br/>40923250 <a href="https://github.com/40923250/cad2021_hw">40923250</a><br/>40923251 <a href="https://github.com/40923251/cad2021_hw">40923251</a><br/>40923252 <a href="https://github.com/40923252/cad2021_hw">40923252</a><br/>40923253 <a href="https://github.com/40923253/cad2021_hw">40923253</a><br/>40971220 <a href="https://github.com/40971220/cad2021_hw">40971220</a><br/>40971227 <a href="https://github.com/40971227/cad2021_hw">40971227</a></p>
<h1>HW1</h1>
<p>HW1 佔學期成績 25%</p>
<p><span style="background-color: #ffff99;">HW1 必須在 2021.11.10 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/5">HW1 具體項目成果回報區</a>將於 2021.09.23 開啟, 於 <span style="background-color: #ff99cc;">2021.11.10 22:00 關閉.</span></p>
<h4>作業一: meArm Robot 零件繪圖與機電運動模擬場景製作</h4>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step1</span>: 下載 <a href="https://drive.google.com/file/d/18ukdNlFB9yHY-FZSY-bTnzrPrNv0FE4D/view?usp=sharing">meARM.7z</a> 這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊.</p>
<p style="padding-left: 60px;"><a href="/downloads/meArm_75-0040_v1.pdf">meArm_75-0040_v1.pdf</a> 則是另外一本組立參考手冊.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step2</span>: 從課程網頁中的 <a href="https://mde.tw/cad2021/content/Compile%20CoppeliaSim.html">Compile CoppeliaSim 頁面</a>, 下載 <a href="https://drive.google.com/file/d/1hV8hHjjnLvUp-AEjd2iCfBYk067WSjcy/view?usp=sharing">coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z</a> (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step3</span>: 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,  經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件<a href="https://www.coppeliarobotics.com/helpFiles/en/importExport.htm">匯入</a> CoppeliaSim 進行組裝配置後, 以 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制 meArm Robot 各軸的旋轉作動.</p>
<p style="padding-left: 30px;">2b CAD 套件分配結果: <a href="https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt">https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt</a></p>
<h4>附件:</h4>
<p style="padding-left: 30px;">1. CAD 套件分配表:</p>
<p style="padding-left: 60px;">sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination.py">2a 套件亂數分配結果</a></p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination_b.py">2b 套件亂數分配結果</a></p>
<p style="padding-left: 30px;">2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用 <a href="https://www.coppeliarobotics.com/helpFiles/en/shapeEditModes.htm">shape edit modes</a> 轉為 <a href="https://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm">clean model</a>, 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes).</p>
<p style="padding-left: 30px;">3. meARM Robot <a href="https://www.youtube.com/watch?v=YdhpMqNa_mE">動態模擬場景</a>的建構, 可參考 <a href="https://www.youtube.com/watch?v=ucO0v5iel-c">0</a>, <a href="https://www.youtube.com/watch?v=jeviAIlh7wY">1</a>, <a href="https://www.youtube.com/watch?v=MrmHoGa3Kg4">2</a>, <a href="https://www.youtube.com/watch?v=43-xyipH9Ss">3</a>, <a href="https://www.youtube.com/watch?v=i9e4GXov8rk">4</a>, <a href="https://www.youtube.com/watch?v=7f1jzC6Uptg">5</a>, <a href="https://www.youtube.com/watch?v=xadyMQJxjnw">6</a>, <a href="https://www.youtube.com/watch?v=SQhKlnNnzuQ">7</a>, 也可參考 <a href="https://github.com/mdecourse/models/blob/master/robots/non-mobile/uarm.ttm">Uarm Robot model</a> 與相關<a href="https://www.youtube.com/watch?v=OqPVK__z9Ek">影片</a>.</p>
<p style="padding-left: 30px;">4. CoppeliaSim design dynamic simulations <a href="https://www.coppeliarobotics.com/helpFiles/en/designingDynamicSimulations.htm">說明頁面</a>.</p>
<p style="padding-left: 30px;">5. <a href="https://mde.tw/cad2021/downloads/lua/index.html">網際 Lua</a> 程式執行.</p>
<p style="padding-left: 30px;">6. <a href="/downloads/meArm.slvs">meArm.slvs</a>, <a href="/downloads/meArm_in_solvespace.slvs">meArm_in_solvespace.slvs</a></p>
<p style="padding-left: 30px;">7. UI 介面程式參考:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function closeEventHandler(h)
    sim.addLog(sim.verbosity_scriptinfos,'Window '..h..' is closing...')
    simUI.hide(h)
end

function joint1_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta1 set to '..newVal)
    sim.setJointTargetPosition(joint1, newVal*deg)
end

function joint2_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta2 set to '..newVal)
    sim.setJointTargetPosition(joint2, newVal*deg)
end

function joint3_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta3 set to '..newVal)
    sim.setJointTargetPosition(joint3, newVal*deg)
end

function joint16_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta16 set to '..newVal)
    sim.setJointTargetPosition(joint16, newVal*deg)
    sim.setJointTargetPosition(joint20, -newVal*deg)
end

function sysCall_init()
    -- do some initialization here
    joint1 = sim.getObjectHandle('motor1')
    joint2 = sim.getObjectHandle('motor2')
    joint3 = sim.getObjectHandle('motor3')
    joint16 = sim.getObjectHandle('motor16')
    joint20 = sim.getObjectHandle('motor20')
    i = 0
    deg = math.pi/180
    print(i)
    xml = [[
&lt;ui closeable="true" on-close="closeEventHandler" resizable="true"&gt;
    &lt;label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" /&gt;
    &lt;tabs&gt;
        &lt;tab title="Numeric"&gt;a
            &lt;label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" /&gt;
            &lt;label text="" id="3000" wordwrap="true" /&gt;
            &lt;label text="theta1" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="360" on-change="joint1_rotate" /&gt;
            &lt;label text="theta2" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="65" on-change="joint2_rotate" /&gt;
            &lt;label text="theta3" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="185" on-change="joint3_rotate" /&gt;
            &lt;label text="theta16" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="15" on-change="joint16_rotate" /&gt;
        &lt;/tab&gt;
    &lt;/tabs&gt;
&lt;/ui&gt;
]]
    ui=simUI.create(xml)
    
end</pre>
<p><img alt="" class="add_border" height="282" src="/images/meArm_linkage_dimension.png" width="600"/></p>
<p>(From: <a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a>)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2pFReCfDZsU" title="YouTube video player" width="560"></iframe></p>
<h2>VPN申請</h2>
<p>首先先登入NFU-校務eCare</p>
<p><strong>步驟一</strong></p>
<ul>
<li>左側點選(個人資訊及設定)。</li>
<li>點選(SSL-VPN)連線申請。</li>
<li>右側會出現申請須知，須知下會有個(我要申請)按下去。</li>
<li>會出現下圖視窗，填入申請人姓名和E-mail，勾選研究用途，送出申請等待數日，如申請通過E-mail就會收到信件通知。</li>
</ul>
<p>     <img alt="" height="211" src="/images/chrome_KZCMfif1oA.png" width="287"/></p>
<ul>
<li>收到通過信件後，只要參照連結內操作下載登入就可以使用。<a href="https://nfucc.nfu.edu.tw/?p=17008">https://nfucc.nfu.edu.tw/?p=17008</a></li>
</ul>
<p>      <img alt="" height="289" src="/images/msedge_IVF5jsDM2H.png" width="224"/></p>
<p><strong></strong></p>
<h2>Solidworks 繪圖</h2>
<p>Solidworks 1993年到2019年的歷史介紹</p>
<p><strong>1993年</strong></p>
<p>創始人Jon Hirschtick，開發了SolidWorks。</p>
<p><strong>1995年</strong></p>
<ul>
<li>Solidworks與其他CAD系統的18,000美元相比，Solidworks的售價僅為4,000美元。</li>
<li>該軟體更易於使用，易用性的很大一部份原因是它採用了現代著名的Windows介面。</li>
<li>模型的可視化是前所未有的，在光線充足的陰影環境中的建構功能與傳統建模空間形成鮮明對比，傳統建模空間僅顯示黑色背景下的黑框。</li>
<li>我們現在熟悉的類似FeatureManager用於顯示模型的構建歷史。</li>
<li>零件、組件和圖紙從一開始就可用，用戶無法在組件中應用配合但仍可將組建放置到位。</li>
</ul>
<p><strong>1996年</strong></p>
<ul>
<li>介紹了上下建模，允許使用自上而下的裝配建模方法。</li>
<li>用戶現在可以在裝配中使用配合並捕捉動態裝配運動，除了干擾檢測用戶還可以更輕鬆的驗證形狀、適合度和功能。</li>
<li>拖放功能可將一個裝配體零部件移動到另一個裝配體中。</li>
<li>部分配置</li>
<li>自動化物料清單，只有一種方法沒有自定義選項，但它很有效。</li>
</ul>
<p><strong>1997年</strong></p>
<ul>
<li>板金功能首次發布。</li>
<li>標準庫功能推出。</li>
<li>Loft功能現在可以使用引導曲線。</li>
<li>Solidworks被Dassault Systemes收購。</li>
<li>面部圓角介紹。</li>
<li>裝配配置</li>
<li>完全可定製的組件爆炸視圖。</li>
</ul>
<p><strong>1998年</strong></p>
<ul>
<li>已發布功能面板，現在與設計庫的功能類似，可以拖放到模型上的預製功能。</li>
<li>草圖診斷可幫助用戶理解草圖不適用於特定特徵的原因。</li>
<li>Lofts和Sweeps的相切控制。</li>
<li>組合件封包Assembly Envelopes。</li>
<li>智能配合在建造組件中更多的使用拖放式自動化。</li>
<li>隨著用戶不斷建造越來越大的組件，輕量級組件可以幫助提高性能。</li>
<li>表面處理工具首次推出。</li>
<li>FeatureWorks用於導入文件，能夠更有效的使用來自於其他軟體的現有3D數據。</li>
<li>首次CSWP考試發布，它是手寫的，並通過郵件發送。</li>
</ul>
<p><strong>1999年</strong></p>
<ul>
<li>Palm Springs的第一個Soliworks World。</li>
<li>拖動組件時對組件的實時碰撞測驗。</li>
<li>3D草圖介紹。</li>
<li>管道模塊發布。</li>
<li>2D命令模擬器有助於縮小與以前AutoCAD用戶的差距。</li>
</ul>
<p><strong>2000年</strong></p>
<ul>
<li>發布eDrawings。</li>
<li>實現了Hole Wizard接口。</li>
<li>表面處理更有用，能夠編織、修剪和延伸表面。</li>
<li>SolidWorks Explorer。</li>
<li>動態間隙檢測可驗證裝配部分之間的最小間隙。</li>
</ul>
<p><strong>2001年</strong></p>
<ul>
<li>鏡像組件中的組件。</li>
<li>引領互動，以前，在任何CAD系統中，只要選擇了命令，軟體就會在模型頂部顯示整個對話框，SolidWorks開始廢除這一點，並轉向我們現在知道的PropertyManagers，並將陰影標註返回到模型。</li>
<li>現在允許靈活的子組件進一步捕捉準確的裝配運動。</li>
<li>介紹填充表面命令。</li>
<li>DXF、DWG導入嚮導發布。</li>
<li>3D會議，最終在幾個版本之後退出，利用Microsoft Live Meeting並允許與屏幕共享進行實時同步會議。</li>
<li>運動模擬功能現在可以捕捉組件中移動的組件的實際物理動態。</li>
<li>介紹大型裝配模式。</li>
<li>實現了2D到3D轉換工具，以便將2D CAD數據輕鬆轉換為功能齊全的3D模型。</li>
<li>介紹Solidworks Office，將常用的插件如PhotoWorks、Toolbox、Utilties和FeatureWorks打包成一個產品。</li>
<li>Dassault Systemes收購了SRAC並開始將仿真引入主流設計流程。</li>
</ul>
<p><strong>2003年</strong></p>
<ul>
<li>COSMOSXpress是第一款Xpress產品，它為每個桌面帶來了簡單的零件驗證。</li>
<li>3DContentCentral位用戶提供了一個交互和共享模型的社區。</li>
<li>多體零件設計，這是一個非常大的問題，現在是焊接、鈑金和模具設計得基礎。</li>
<li>收購了PDMWorks並引入了Solidworks Office Professional軟體包，開始將PDM作為每個客戶提供的一部分。</li>
</ul>
<p><strong>2004年</strong></p>
<ul>
<li>界面更新，包括CommandManager，彈出FeatureManager和PropertyManage和ConfigurationManager的管理器視圖選項卡。</li>
<li>介紹了模具工具和焊件。</li>
<li>實施Auto Balloon命令以匹配物料清單物料編號中的Balloon編號。</li>
<li>限制配合以捕捉更複雜的裝配運動。</li>
<li>推出了RealView Graphics，以便隨時提供更逼真的圖像。</li>
</ul>
<p><strong>2005年</strong></p>
<ul>
<li>繪圖比較，為用戶提供工具來比較兩個圖紙之間的變化。</li>
<li>Flex功能。</li>
<li>電氣布線與管道布線一起使用。</li>
<li>在圖紙中自動標註，以捕捉模型中已定義尺寸。</li>
<li>能夠繪製無限線條。</li>
<li>SolidWorks Rx發布，旨在提供幫助技術支持更好地去識別問題。</li>
</ul>
<p><strong>2006年</strong></p>
<ul>
<li>發布Smart Components功能，允許為硬體之類的物件安裝智能裝配組件。</li>
<li>介紹填充圖案。</li>
<li>介紹草圖塊。</li>
<li>顯示狀態。</li>
<li>設計檢查器，允許用戶根據公司標準動態檢查他們的模型。</li>
<li>添加了相機視圖功能。</li>
<li>發布白金版軟體包，包括Rouring、COSMOSWorks和COSMOSMotion進行模型，以及ScanTo3D。</li>
</ul>
<p><strong>2007年</strong></p>
<ul>
<li>SWIFT工具可幫助設計人員在提供自動化解決方案時動態了解模型存在問題或錯誤的原因。</li>
<li>可在組件中使用皮帶、鏈條和齒輪功能。</li>
<li>用於表面處理的自由形式命令。</li>
<li>介紹Enterprise PDM。</li>
</ul>
<p><strong>2008年</strong></p>
<ul>
<li>使用新的菜單欄和CommandManager布局對用戶界面進行全面檢修和現代優化，上下工具欄和快捷工具欄首次可用，所有這些界面組件現在都可以完全自定義。</li>
<li>Instont3D，提供拖動和操縱幾何體的功能，可輕鬆測試不同的設計概念。</li>
<li>發布TolAnalyst。</li>
<li>設計剪貼畫，通過剖析現有數據以便在另一個模型中重複使用，可以更輕鬆地重用現有的2D和3D數據。</li>
<li>推出DriveWorksXpress和DFMXpress。</li>
</ul>
<p><strong>2009年</strong></p>
<ul>
<li>PhotoView360圖宣染作為第一個宣染引入，以訪問處理器的多核功能。</li>
<li>SpeedPak現在可用於簡化裝配中的組件。</li>
<li>為追求更高目標，所以引入傳感器。</li>
<li>CircuitWorks發布並添加到白金版軟體包中。</li>
<li>發布3DVIA Composer。</li>
</ul>
<p><strong>2010年</strong></p>
<ul>
<li>現在提供可持續發展方案，幫助用戶了解其設計對環境的影響。</li>
<li>快速標註尺寸使得創建細節圖更加容易。</li>
<li>介紹基於事件的運動模擬。</li>
<li>首次提供滑鼠手勢快捷鍵。</li>
<li>現在可以進行多體板金件模。</li>
</ul>
<p><strong>2011年</strong></p>
<ul>
<li>PhotoView360完全集成到Solidworks界面中。</li>
<li>現在可以使用走查功能。</li>
<li>引入了Defeature工具以幫助限制模型中的智慧財產權數量。</li>
<li>現在可以在Simulation中使用平面簡化。</li>
<li>自動排列圖紙中的尺寸。</li>
</ul>
<p><strong>2012年</strong></p>
<ul>
<li>方程式編輯器經過徹底檢修後，更加用戶友好。</li>
<li>介紹Large Deesign Review。</li>
<li>Feature Freeze現在可以讓用戶更好的控制性能。</li>
<li>板金增強，邊線法蘭的更多選擇，引入掃描法蘭，使用的成型工具更加人性化。</li>
<li>發布成本計算加載項。</li>
</ul>
<p><strong>2013年</strong></p>
<ul>
<li>View Orientation有一個對話框，不再只是在工具欄上了，還引入了選擇器多維數據集以及保存視圖功能以便之後使用。</li>
<li>以前的版本文件互操作性，2013文件現在可以在2012 SP5中打開。</li>
<li>介紹Conic草圖實體。</li>
<li>相交功能。</li>
<li>客戶門戶網站上提供了CAD管理員儀表板。</li>
</ul>
<p><strong>2014年</strong></p>
<ul>
<li>能夠通過上下工具欄快捷方式添加標準配合。</li>
<li>替換草圖實體使用戶能夠用新的實體替換舊實體並仍然維護下游引用。</li>
<li>推出了板金中的Lofted Bend功能。</li>
<li>能夠創建圓錐倒角。</li>
<li>樣式樣條草圖命令。</li>
<li>自動縮放第一個草圖，現在在草圖上創建第一個維度時，所有實體都會自行調整大小以進行縮放。</li>
<li>能夠配置結構成員配置文件，現在允許配置輪廓草圖，這大大改變了需要組織的文件數量。</li>
<li>MySolidWorks作為能夠提供自學培訓以及所有Solidworks的在線資源社區發布。</li>
</ul>
<p><strong>2015年</strong></p>
<ul>
<li>動態參考可視化，幫助用戶了解父子關聯。</li>
<li>引入了選擇集，以便於重複使用幾何選擇組合。</li>
<li>能夠直接從SolidWorks進行3D列印。</li>
<li>Simulation中的疲勞分析。</li>
<li>輪廓中心配合。</li>
<li>發布SolidWorks MBD。</li>
</ul>
<p><b>2016年</b></p>
<ul>
<li>用戶界面重新設計，包括更好的支持高解析度顯示器。</li>
<li>藍色、灰色盤默認採用傳統配色方案。</li>
<li>引入了選擇麵包屑，使相關命令更容易訪問。</li>
<li>實現Mate Controller工具，以更加可訪問的方式捕捉裝配定位。</li>
<li>能夠全局替換失敗的配合實體。</li>
<li>介紹Thread功能。</li>
<li>發布標準版並添加到SolidWorks Professional專業版軟體包中。</li>
<li>SolidWorks Visualize作為獨立的圖片宣染應用程式發布。</li>
</ul>
<p><strong>2017年</strong></p>
<ul>
<li>引入3D互連以簡化部圖文件類型與SolidWorks的協作。</li>
<li>Asset Publisher具有地層和磁配對，可以輕鬆實現大型裝配布局。</li>
<li>引入了高級孔功能。</li>
<li>增強Wrap功能，可以更多類型的面選擇上創建幾何體。</li>
<li>陰影草圖輪廓增強選擇和操作功能。</li>
</ul>
<p><strong>2018年</strong></p>
<ul>
<li>SolidWorks啟動時的歡迎對話框。</li>
<li>用戶設置現在可以登錄，新發布的在線許可也可以遵循此登錄，在需要再多台計算機上使用SolidWorks時為用戶提供另一種選擇。</li>
<li>選擇幾何圖形，允許用戶忽略幾何圖形並在其上選擇其他實體。</li>
<li>引入了標籤和插槽功能，自動執行以前在板金和焊件中常用的手動方法。</li>
<li>能夠鏡像3D草圖中的實體。</li>
<li>首次使用筆，觸屏和基於手勢的草圖繪製功能。</li>
<li>引入拓撲仿真分析。</li>
</ul>
<p><strong>2019年</strong></p>
<ul>
<li>顯著改進裝配性能。</li>
<li>Silhouette defeature命令，簡化了從模型刪除細節以提高性能或保護智慧財產權的過程。</li>
<li>能夠按狀態對mates進行分組。</li>
<li>部分倒角和圓角。</li>
<li>將圖像轉換為網路凹凸貼圖，從圖像文件創建實際的3D幾和體。</li>
</ul>
<h3>Solidworks 安裝配置</h3>
<p><img alt="" height="69" src="/images/msedge_FfEvwWs4Rq.png" width="582"/></p>
<p>Solidworks目前還卡在軟體包下載問題，我有依照老師說的先登入@gm帳號，也有申請學校VPN，但在下載到一半時總是一直跳掉，出現上圖問題。所以目前先放上我在網上參閱他人的破解版安裝過程。</p>
<p>參考文獻(<a href="https://www.jb51.net/softs/754243.html">Solidworks破解版的安裝程序</a>)</p>
<p>安裝問題已解決，從網址(c.kmol.info/downloads/)的網站，找到所需要的資料夾即可下載。</p>
<p>solidworks2020下載安裝與配置YouTube影片</p>
<p><a href="https://www.youtube.com/watch?v=uEYkQGTCYBs" title="NFU - MDE - cad2021 - 40923209 - SW2020 下載安裝與配置">NFU - MDE - cad2021 - 40923209 - SW2020 下載安裝與配置</a></p>
<p></p>
<h3>Solidworks 操作流程</h3>
<p><span>Solidworks</span> 零組件繪圖操作流程Youtube影片 </p>
<p><a href="https://www.youtube.com/watch?v=r7fg3s3d0uw">NFU-MDE-cad2021-40923209-SW2020 零組件繪製教學影片</a></p>
<p></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="395" src="https://www.youtube.com/embed/r7fg3s3d0uw" title="YouTube video player" width="703"></iframe></p>
<h2>NX12 繪圖</h2>
<p>NX12 1960年到2017年的歷史介紹</p>
<p><strong>1960年</strong></p>
<ul>
<li>McDonnell Douglas Aoutomation公司成立。</li>
</ul>
<p><strong>1976年</strong></p>
<ul>
<li>收購了Unigraphics CAD、CAE、CAM系統開發商United Computing公司，UG的雛形問世。</li>
</ul>
<p><strong>1983年</strong></p>
<ul>
<li>UG上市。</li>
</ul>
<p><strong>1986年</strong></p>
<ul>
<li>Unigraphics吸取了業界領先的為實踐所證實的實體建模核心Parasolid的部分功能。</li>
</ul>
<p><strong>1989年</strong></p>
<ul>
<li>Unigraphics宣布支持UNIX平台及開發系統的結構，並將一個新的與STEP標準兼容的三維實體建模核心Parasolid引入UG。</li>
</ul>
<p><strong>1990年</strong></p>
<ul>
<li>Unigraphics作為McDonnell Douglas波音飛機公司的機械CAD、CAE、CAM的標準。</li>
</ul>
<p><strong>1991年</strong></p>
<ul>
<li>Unigraphics開始了從CAD、CAE、CAM大型機版本到工作站版本的轉移。</li>
</ul>
<p><strong>1993年</strong></p>
<ul>
<li>Unigraphics引入複合建模的概念，可以實體建模、曲線建模、框線建模、半參數化及參數化建模融為一體。</li>
</ul>
<p><strong>1995年</strong></p>
<ul>
<li>Unigraphics首次發布了Windows NT版本。</li>
</ul>
<p><strong>1996年</strong></p>
<ul>
<li>Unigraphics發布了自動進行干涉檢查的高級裝配功能模塊、最先進的CAM模塊以及具有A類曲線造型能力的工業造型模塊，它在全球迅猛發展，佔領了巨大的市場份額，已經成為高端及商業CAD、CAE、CAM應用開發的常用軟體。</li>
</ul>
<p><strong>1997年</strong></p>
<ul>
<li>Unigraphics新增了包括WAVE幾何連結器在內的一系列工業領先的新增功能，WAVE這一功能可以定義、控制、評估產品模板，被認為是在未來幾年中業界最有影響的新技術。</li>
</ul>
<p><strong>2000年</strong></p>
<ul>
<li>Unigraphics發布了新版本的UG17，最新版本的是UGS成為工業界第一個可以裝載包含深層嵌入基於工程知識(KBE)語言的世界級MCAD軟體產品供應商。</li>
</ul>
<p><strong>2001年</strong></p>
<ul>
<li>Unigraphics發布了新版本的UG18，新版本隊舊版本的對話框進行了調整，使得在最少的對話框中能完成更多的工作，從而簡化了設計。</li>
</ul>
<p><strong>2002年</strong></p>
<ul>
<li>Unigraphics發布了UG NX1.0新版本繼承了UG18的優點，改進和增加了許多功能，使其功能更強大，更完美。</li>
</ul>
<p><strong>2003年</strong></p>
<ul>
<li>Unigraphics發布了新版本UG NX2.0，新版本基於最新的行業標準，它是一個全新支持PLM的體系結構，EDS公司同其主要客戶一起，設計了這樣一個先進的體系結構，用於支持完整的產品工程。</li>
</ul>
<p><strong>2004年</strong></p>
<ul>
<li>Unigraphics發布了新版本的UG NX3.0，它為用戶的產品設計與加工過程提供了數位化造型和驗證手段，它針對用戶的虛擬產品的設計和工藝設計的需要，提供經過實踐驗證的解決方案。</li>
</ul>
<p><strong>2005年</strong></p>
<ul>
<li>Unigraphics發布了新版本的UG NX4.0，它是嶄新的NX體系結構，使得開發與應用更加簡單和快捷。</li>
</ul>
<p><strong>2007年</strong></p>
<ul>
<li>UGS公司發布了NX5.0，NX的下一代數字產品開發軟體，幫助用戶以更快的速度開發創新產品，實現更高的成本效益。</li>
</ul>
<p><strong>2008年</strong></p>
<ul>
<li>Siemens PLM Software發布UG NX6.0，建立在新的同步建模技術基礎之上的NX6.0將在市場上產生重大影響，同步建模技術的發布標誌著NX的一個重要里程碑，並且向MCAD市場展示Siemens的鄭重承諾，NX6.0將為我們的重要客戶提供極大的生產力提高。</li>
</ul>
<p><strong>2009年</strong></p>
<ul>
<li>西門子工業自動化業務部旗下機構、全球領先的產品生命週期管理(PLM)軟體與服務提供商Siemens PLM Software宣布推出旗艦數位化產品開發解決方案NX軟體的最新版，UG NX7.0引入了HD3D(三維精確描述)功能，即一個開放、直觀的可視化環境，有助於全球產品開發團隊充分發掘PLM信息的價值，並顯著提升其制定卓有成效的產品決策的能力，此外NX7.0還新增了同步建模技術的增強功能，修復了很多NX6.0所存在的漏洞，穩定性方面較NX6.0有很大的提升。</li>
</ul>
<p><strong>2010年</strong></p>
<ul>
<li>Siemens PLM Software在上海世博會發布了功能增強的NX7.0最新版本(UG NX7.5)，NX GC工具箱將作為NX7.0最新版本的一個應用模塊與NX7.0一起同步發布。NX GC工具箱是為滿足中國用戶對NX特殊需求推出的本地化軟體工具包，在符合國家標準(GB)基礎上，NX GC工具箱做了進一步完善和大量的增強工作。</li>
</ul>
<p><strong>2011年</strong></p>
<ul>
<li>Siemens PLM Software發布了UG NX8.0</li>
</ul>
<p><strong>2012年</strong></p>
<ul>
<li>Siemens PLM Software發布了UG NX8.5</li>
</ul>
<p><strong>2013年</strong></p>
<ul>
<li>Siemens PLM Software發布了UG NX9.0</li>
</ul>
<p><strong>2014年</strong></p>
<ul>
<li>Siemens PLM Software發布了UG NX10.0</li>
</ul>
<p><strong>2016年</strong></p>
<ul>
<li>Siemens PLM Software發布了UG NX11.0</li>
</ul>
<p><strong>2017年</strong></p>
<ul>
<li>Siemens PLM Software發布了UG NX12.0</li>
</ul>
<h3>NX12 安裝配置</h3>
<p>   <img alt="" height="224" src="/images/msedge_K7RI1AV3Gc.png" width="264"/><img alt="" height="70" src="/images/msedge_82YOH84sH5.png" width="270"/></p>
<p>我在安裝NX12這部分遇到棘手的問題，就是原先老師提供的NX12軟體包遇到需要存取權的問題，但後來老師有在Gitter(<a href="https://gitter.im/mdecourse/cad2021">線上課程時段訊息發布區</a>)又放上兩個軟體包提供我們下載，所以這個問題解決了。</p>
<p>但由於我的電腦本身就有下載過NX12，所以這部份我則是上網參閱他人提供的破解版安裝過程。</p>
<p>參考文獻(<a href="https://www.twblogs.net/a/5cd400d0bd9eee6726c96ecf">NX12破解版的安裝程序</a>)</p>
<p>CAD2 套件下載安裝與配置影片 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 </span>套件下載安裝與配置影片」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.<br/></span></p>
<p></p>
<h3>NX12 操作流程</h3>
<p>CAD2 零組件繪圖操作流程Youtube影片</p>
<p><a href="https://www.youtube.com/watch?v=cFYpLPknyp8">NFU-MDE-cad2021-40923209-NX12.0 零組件繪製教學影片</a></p>
<h2>運動場景</h2>
<h4>Solidworks:</h4>
<p style="padding-left: 30px;">Solidworks 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube)</p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/watch?v=XOB_KRu2sOg">NFU-MDE-cad2021-40923209-SW2020<span>零件轉入 CoppeliaSim 教學影片</span></a></p>
<p style="padding-left: 30px;">Solidworks 零件轉入 CoppeliaSim 教學影片 (Wink)</p>
<p style="padding-left: 30px;">Solidworks 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 </span>零件轉入 CoppeliaSim 教學影片」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.<br/></span></p>
<h4>NX 12.0:</h4>
<p style="padding-left: 30px;">NX 12.0 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube)</p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/watch?v=TSJUQdC27Io">NFU-MDE-cad2021-40923209-NX 12.0 <span>零件轉入 CoppeliaSim 教學影片</span></a></p>
<p style="padding-left: 30px;">NX 12.0 零件轉入 CoppeliaSim 教學影片 (Wink)</p>
<p style="padding-left: 30px;">NX 12.0 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「<span style="background-color: #ffff99;">NFU - MDE - cad2021 - 學號 - SW2020 </span>零件轉入 CoppeliaSim 教學影片」且加上<span style="background-color: #ccffcc;">語音說明</span>與<span style="background-color: #ccffcc;">字幕.</span></p>
<p>若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱.</p>
<h2>W13</h2>
<pre><code>請建立一個 Wink 檔案說明截至目前所完成的兩套 CAD 零組件繪圖進度 (30%).<br/></code></pre>
<p>-----------------------------------</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" width="1920">
<source src="./../downloads/繪圖進度1.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>----------------------------------</p>
<pre><code>請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂第一軸, 加入 https://www.coppeliarobotics.com/helpFiles/en/simUI-widgets.htm slider, 可以在執行時, 利用滑鼠拖動旋轉 360 度 (30%).</code></pre>
<p>-----------------------------------</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" width="1920">
<source src="./../downloads/w13-meArm轉動.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>---------------------------------------------</p>
<pre><code>請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂其中的 1 ~ 3 軸 (夾爪除外), 加入 UI 介面 slider, 可以在執行時, 利用滑鼠拖動在各軸的極限位置旋轉 (40%).<br/></code></pre>
<p>-------------------------------</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" width="1920">
<source src="./../downloads/w13-meArm轉動.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>---------------------------------------------</p>
<h1>HW1-1</h1>
<p>HW1-1 佔學期成績 15%</p>
<p><span style="background-color: #ffff99;">HW1-1 必須在 2021.12.01 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/6">HW1-1 具體項目成果回報區</a>將於 2021.11.18 開啟, 於 <span style="background-color: #ff99cc;">2021.12.01 22:00 關閉.</span></p>
<h4>作業 1-1: Mirobot 機械手臂場景組合</h4>
<p>說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中六個自由度的 Mirobot 機械手臂.</p>
<p><a href="https://drive.google.com/file/d/1hnoMQ1Hh_Hgdxh7Aym4q43DzLjOWUanR/view?usp=sharing">mirobot_part1_to_part5.7z</a> 為取自  <a href="https://github.com/wlkata/Mirobot-STL">https://github.com/wlkata/Mirobot-STL</a> 的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制各軸作動旋轉的運動模型.</p>
<p>請根據 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中的說明, 完成各項指定任務.</p>
<h2>W11</h2>
<p>Soliworks 3D圖檔與零件尺寸圖</p>
<p><a href="https://drive.google.com/drive/folders/1Y5DBKGoWa-J4mwQUqs0o7IycbZ7CzR7a?usp=sharing" title="https://drive.google.com/drive/folders/1Y5DBKGoWa-J4mwQUqs0o7IycbZ7CzR7a?usp=sharing">https://drive.google.com/drive/folders/1Y5DBKGoWa-J4mwQUqs0o7IycbZ7CzR7a?usp=sharing</a></p>
<p>NX12 3D圖檔與零件尺寸圖</p>
<p><a href="https://drive.google.com/drive/folders/1FMYRbMdGGS5jcJ7oXlBprNNSnK0JcV03?usp=sharing" title="https://drive.google.com/drive/folders/1FMYRbMdGGS5jcJ7oXlBprNNSnK0JcV03?usp=sharing">https://drive.google.com/drive/folders/1FMYRbMdGGS5jcJ7oXlBprNNSnK0JcV03?usp=sharing</a></p>
<p>-------------------------------------------------------------------------------</p>
<p>Soliworks繪圖過程</p>
<p>-------------------------------------------------------------------------------</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" width="1920">
<source src="./../downloads/sw繪圖過程.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>-------------------------------------------------------------------------------</p>
<p>使用CoppeliaSim在做四連桿時，左側的Scene hierarchy，我是參照<a href="https://40923207.github.io/cad2021_hw/content/H2.html">40923207同學的W11</a>去完成的，但按下開始鍵時，四連桿只因受到重量而落下。</p>
<p>-------------------------------------------------------------------------------</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" width="1920">
<source src="./../downloads/w11四連桿.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>-------------------------------------------------------------------------------------</p>
<p>關於上述的問題已找到解決方法。</p>
<p>1.在dase_E零件中加上程式。</p>
<p>2.因為motor1扭力不夠，所以調整馬達轉速，就可以成功的動起來。</p>
<p>----------------------------------------------------------------------------------------</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" width="1920">
<source src="./../downloads/四連桿做動.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h1>HW2</h1>
<p>HW2 佔學期成績 20%</p>
<p><span style="background-color: #ffff99;">HW2 必須在 2021.12.22 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/7">HW2 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2021.12.22 22:00 關閉.</span></p>
<p>meArm 逆向運動學與網際參數式 CAD API 結合應用.</p>
<p>請將 <a href="https://github.com/mdecourse/meArm">https://github.com/mdecourse/meArm</a> 中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制.</p>
<p>請利用 <a href="https://mde.tw/cad2021/content/Task%202.html">Task2</a> 中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求.</p>
<h4>參考:</h4>
<p style="padding-left: 30px;"><a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenberg.pdf">Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/KINEMATIC ANALYSIS FOR ROBOT ARM.pdf">KINEMATIC ANALYSIS FOR ROBOT ARM.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://codebender.cc/user/MeArm">https://codebender.cc/user/MeArm</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/meArmPi">https://github.com/mdecourse/meArmPi</a></p>
<p style="padding-left: 60px;"><a href="/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf">/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/me-arm-ik">https://github.com/mdecourse/me-arm-ik</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/mearm_model">https://github.com/mdecourse/mearm_model</a></p>
<p style="padding-left: 30px;"><a href="https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html">https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/InefficientSkittleSorter">https://github.com/mdecourse/InefficientSkittleSorter</a></p>
<p style="padding-left: 30px;"><a href="https://mearm.com">https://mearm.com</a></p>
<h1>HW3</h1>
<p>HW3 為選項作業.</p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/9">HW3 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p><a href="https://mde.tw/cad2021/content/Task3.html">https://mde.tw/cad2021/content/Task3.html</a> </p>
<p><a href="https://mde.tw/cad2021/content/Task4.html">https://mde.tw/cad2021/content/Task4.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task5.html">https://mde.tw/cad2021/content/Task5.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task6.html">https://mde.tw/cad2021/content/Task6.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task7.html">https://mde.tw/cad2021/content/Task7.html</a></p>
<p>請從上列 Tasks 中自行選擇項目內容完成 HW3.</p>
<h1>期末考試</h1>
<p>第一階段零件與組裝圖檔<a href="https://drive.google.com/drive/folders/1MIXF9NUheFjSl1Jijy__JjqQUD-OAoRU?usp=sharing">40923209_final.zip</a></p>
<p>(我所使用的繪圖軟體是solidworks 2020，若要開組裝圖查看時，要連零件圖一併打開，才不會出現組裝圖零件缺失的問題)</p>
<p>第一階段meArm Robot 零件與組立檔案畫面</p>
<p>YouTube連結<a href="https://www.youtube.com/watch?v=QqrKiOHzAqE">https://www.youtube.com/watch?v=QqrKiOHzAqE</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="396" src="https://www.youtube.com/embed/QqrKiOHzAqE" title="YouTube video player" width="704"></iframe></p>
<p>第二階段零件與組裝圖檔<a href="https://drive.google.com/drive/folders/1MIXF9NUheFjSl1Jijy__JjqQUD-OAoRU?usp=sharing">40923209_final_stage2.zip</a></p>
<p><span>(我所使用的繪圖軟體是solidworks 2020，若要開組裝圖查看時，要連零件圖一併打開，才不會出現組裝圖零件缺失的問題)</span></p>
<p><span>第二階段meArm Robot 零件與組立檔案畫面</span></p><h1>Final Project</h1>
<p>Final Project 佔學期成績 40%</p>
<p><span style="background-color: #ffff99;">2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/8">Final Project 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p>彈性製造系統場景設計與製作</p>
<p>請從 <a href="https://github.com/mdecourse/scenes">https://github.com/mdecourse/scenes</a> 與 <a href="https://github.com/mdecourse/models">https://github.com/mdecourse/models</a> 中選擇場景或模型, 配合 <a href="https://drive.google.com/file/d/1xb1Es8N-FxeG10OSnLNDwwi_tXyNTP9t/view?usp=sharing">cad2021_textbook.pdf</a> (登入 @gm 帳號後下載) 教材中的內容, 自選製作與組立產品, 組合成一個 Flexible Manufacturing System 系統場景.</p>
<p>彈性製造系統內容說明</p>
<h4>範例:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2qc0-yTXBts" title="YouTube video player" width="560"></iframe></p>
<p><br/><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/PDSmRPh6TaM" title="YouTube video player" width="560"></iframe></p>
<h2>2bg2</h2>
<h3>40923209</h3>
<p>期中考第一題</p>
<p><a href="https://drive.google.com/drive/folders/1GglM8wnv37JIgEqLjTo1BgNoJ65hw_VC?usp=sharing">圖檔-零件-組合</a></p>
<p><a href="https://drive.google.com/drive/folders/1fuHu2jZ8Zod4MyKnZWp1e7yP-GyoqxtC?usp=sharing">STL</a></p>
<p><a href="https://drive.google.com/file/d/1U58_D3nah8rKLLznwo78JId3PTk0Sugf/view?usp=sharing">CoppeliaSim</a></p>
<p>--------------------------------------------------------------</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" width="1920">
<source src="./../downloads/期中考第一題.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>--------------------------------------------------------------</p>
<p>期中考第一題延伸題</p>
<p><a href="https://drive.google.com/drive/folders/1zhjz6ghKSfXeUbOlgCQ5g4UZaFrj_Pg1?usp=sharing">stl</a></p>
<p><a href="https://drive.google.com/drive/folders/1mRknm3wq0FGTexQg8QMyLjxBej33fCCD?usp=sharing">coppeliasim</a></p>
<p>--------------------------------------------------------------------</p>
<script>
var winkVideoData = {
dataVersion: 1,
frameRate: 20,
buttonFrameLength: 10,
buttonFrameOffset: 5,
frameStops: {
},
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="1080" width="1920">
<source src="./../downloads/期中考第一題延伸.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>--------------------------------------------------------------------------------------</p>
<p>心得:在做完這次期末考第一題和延伸題的題目後，我感覺到了分組的重要性，原因是在考試前我原本一直不太會使用Coppliasim，不理解Coppliasim功能的使用和組裝原理，而我的組員40923207在星期四夜間輔導時詢問老師經歷老師教導後，組員不藏私的也一一的教導我，使我在做這次的考題時能夠知道如何組裝、設定和操作，順利的完成此次考題。</p>
<h1>run</h1>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>